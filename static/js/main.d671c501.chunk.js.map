{"version":3,"sources":["App.tsx","index.tsx"],"names":["getRandomName","value","Date","now","toString","slice","App","state","today","clockName","hasClock","timerId","timerTwo","this","window","setInterval","setState","console","info","toUTCString","document","addEventListener","event","preventDefault","prevState","debug","clearInterval","className","React","Component","ReactDOM","render","getElementById"],"mappings":"sNASA,SAASA,IACP,IAAMC,EAAQC,KAAKC,MAAMC,WAAWC,OAAO,GAE3C,MAAM,SAAN,OAAgBJ,GAGX,IAAMK,EAAb,4MACEC,MAAe,CACbC,MAAO,IAAIN,KACXO,UAAW,UACXC,UAAU,GAJd,EAOEC,QAAU,EAPZ,EASEC,SAAW,EATb,uDAWE,WAA2B,IAAD,OACxBC,KAAKF,QAAUG,OAAOC,aAAY,WAChC,EAAKC,SAAS,CAAEP,UAAWT,QAC1B,MAEHa,KAAKD,SAAWE,OAAOC,aAAY,WAC7B,EAAKR,MAAMG,WACb,EAAKM,SAAS,CAAER,MAAO,IAAIN,OAE3Be,QAAQC,KAAK,EAAKX,MAAMC,MAAMW,cAAcd,OAAO,IAAK,OAEzD,KAEHe,SAASC,iBAAiB,eAAe,SAACC,GACxCA,EAAMC,iBACN,EAAKP,SAAS,CAAEN,UAAU,OAG5BU,SAASC,iBAAiB,SAAS,WACjC,EAAKL,SAAS,CAAEN,UAAU,SA9BhC,gCAkCE,SAAmBc,GACbA,EAAUf,YAAcI,KAAKN,MAAME,WAErCQ,QAAQQ,MAAR,uBAA8BD,EAAUf,UAAxC,eAAwDI,KAAKN,MAAME,cArCzE,kCAyCE,WACEK,OAAOY,cAAcb,KAAKF,SAC1BG,OAAOY,cAAcb,KAAKD,YA3C9B,oBA8CE,WACE,OACE,sBAAKe,UAAU,MAAf,UACE,6CAGEd,KAAKN,MAAMG,UACT,sBAAKiB,UAAU,QAAf,UACE,wBAAQA,UAAU,cAAlB,SACGd,KAAKN,MAAME,YAGb,YAED,sBAAMkB,UAAU,cAAhB,SACGd,KAAKN,MAAMC,MAAMW,cAAcd,OAAO,IAAK,eA7D5D,GAAyBuB,IAAMC,WCZ/BC,IAASC,OACP,cAAC,EAAD,IACAX,SAASY,eAAe,W","file":"static/js/main.d671c501.chunk.js","sourcesContent":["import React from 'react';\nimport './App.scss';\n\ntype State = {\n  today: Date,\n  clockName: string,\n  hasClock: boolean,\n};\n\nfunction getRandomName(): string {\n  const value = Date.now().toString().slice(-4);\n\n  return `Clock-${value}`;\n}\n\nexport class App extends React.Component<{}, State> {\n  state: State = {\n    today: new Date(),\n    clockName: 'Clock-0',\n    hasClock: true,\n  };\n\n  timerId = 0;\n\n  timerTwo = 0;\n\n  componentDidMount(): void {\n    this.timerId = window.setInterval(() => {\n      this.setState({ clockName: getRandomName() });\n    }, 3300);\n\n    this.timerTwo = window.setInterval(() => {\n      if (this.state.hasClock) {\n        this.setState({ today: new Date() });\n        // eslint-disable-next-line no-console\n        console.info(this.state.today.toUTCString().slice(-12, -4));\n      }\n    }, 1000);\n\n    document.addEventListener('contextmenu', (event: MouseEvent) => {\n      event.preventDefault();\n      this.setState({ hasClock: false });\n    });\n\n    document.addEventListener('click', () => {\n      this.setState({ hasClock: true });\n    });\n  }\n\n  componentDidUpdate(prevState: Readonly<State>): void {\n    if (prevState.clockName !== this.state.clockName) {\n      // eslint-disable-next-line no-console\n      console.debug(`Renamed from ${prevState.clockName} to ${this.state.clockName}`);\n    }\n  }\n\n  componentWillUnmount(): void {\n    window.clearInterval(this.timerId);\n    window.clearInterval(this.timerTwo);\n  }\n\n  render() {\n    return (\n      <div className=\"App\">\n        <h1>React clock</h1>\n\n        {\n          this.state.hasClock && (\n            <div className=\"Clock\">\n              <strong className=\"Clock__name\">\n                {this.state.clockName}\n              </strong>\n\n              {' time is '}\n\n              <span className=\"Clock__time\">\n                {this.state.today.toUTCString().slice(-12, -4)}\n              </span>\n            </div>\n          )\n        }\n      </div>\n    );\n  }\n}\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}