{"version":3,"sources":["App.tsx","index.tsx"],"names":["getRandomName","value","Date","now","toString","slice","App","state","today","clockName","hasClock","timerId","timerTwo","this","window","setInterval","setState","nextValue","console","info","toUTCString","document","addEventListener","event","preventDefault","_prevProps","prevState","debug","clearInterval","className","React","Component","ReactDOM","render","getElementById"],"mappings":"sNASA,SAASA,IACP,IAAMC,EAAQC,KAAKC,MAAMC,WAAWC,OAAO,GAE3C,MAAM,SAAN,OAAgBJ,GAGX,IAAMK,EAAb,4MACEC,MAAe,CACbC,MAAO,IAAIN,KACXO,UAAW,UACXC,UAAU,GAJd,EAOEC,QAAU,EAPZ,EASEC,SAAW,EATb,uDAWE,WAA2B,IAAD,OACxBC,KAAKF,QAAUG,OAAOC,aAAY,WAC5B,EAAKR,MAAMG,UACb,EAAKM,SAAS,CAAEP,UAAWT,QAE5B,MAEHa,KAAKD,SAAWE,OAAOC,aAAY,WACjC,IAAME,EAAY,IAAIf,KAEtB,EAAKc,SAAS,CAAER,MAAOS,IACnB,EAAKV,MAAMG,UAEbQ,QAAQC,KAAKF,EAAUG,cAAcf,OAAO,IAAK,MAElD,KAEHgB,SAASC,iBAAiB,eAAe,SAACC,GACxCA,EAAMC,iBACN,EAAKR,SAAS,CAAEN,UAAU,OAG5BW,SAASC,iBAAiB,SAAS,WACjC,EAAKN,SAAS,CAAEN,UAAU,SAlChC,gCAsCE,SAAmBe,EACjBC,GACIA,EAAUjB,YAAcI,KAAKN,MAAME,WAErCS,QAAQS,MAAR,uBAA8BD,EAAUjB,UAAxC,eAAwDI,KAAKN,MAAME,cA1CzE,kCA8CE,WACEK,OAAOc,cAAcf,KAAKF,SAC1BG,OAAOc,cAAcf,KAAKD,YAhD9B,oBAmDE,WACE,OACE,sBAAKiB,UAAU,MAAf,UACE,6CAGEhB,KAAKN,MAAMG,UACT,sBAAKmB,UAAU,QAAf,UACE,wBAAQA,UAAU,cAAlB,SACGhB,KAAKN,MAAME,YAGb,YAED,sBAAMoB,UAAU,cAAhB,SACGhB,KAAKN,MAAMC,MAAMY,cAAcf,OAAO,IAAK,eAlE5D,GAAyByB,IAAMC,WCZ/BC,IAASC,OACP,cAAC,EAAD,IACAZ,SAASa,eAAe,W","file":"static/js/main.8ebf0bfb.chunk.js","sourcesContent":["import React from 'react';\nimport './App.scss';\n\ntype State = {\n  today: Date,\n  clockName: string,\n  hasClock: boolean,\n};\n\nfunction getRandomName(): string {\n  const value = Date.now().toString().slice(-4);\n\n  return `Clock-${value}`;\n}\n\nexport class App extends React.Component<{}, State> {\n  state: State = {\n    today: new Date(),\n    clockName: 'Clock-0',\n    hasClock: true,\n  };\n\n  timerId = 0;\n\n  timerTwo = 0;\n\n  componentDidMount(): void {\n    this.timerId = window.setInterval(() => {\n      if (this.state.hasClock) {\n        this.setState({ clockName: getRandomName() });\n      }\n    }, 3300);\n\n    this.timerTwo = window.setInterval(() => {\n      const nextValue = new Date();\n\n      this.setState({ today: nextValue });\n      if (this.state.hasClock) {\n        // eslint-disable-next-line no-console\n        console.info(nextValue.toUTCString().slice(-12, -4));\n      }\n    }, 1000);\n\n    document.addEventListener('contextmenu', (event: MouseEvent) => {\n      event.preventDefault();\n      this.setState({ hasClock: false });\n    });\n\n    document.addEventListener('click', () => {\n      this.setState({ hasClock: true });\n    });\n  }\n\n  componentDidUpdate(_prevProps: Readonly<{}>,\n    prevState: Readonly<State>): void {\n    if (prevState.clockName !== this.state.clockName) {\n      // eslint-disable-next-line no-console\n      console.debug(`Renamed from ${prevState.clockName} to ${this.state.clockName}`);\n    }\n  }\n\n  componentWillUnmount(): void {\n    window.clearInterval(this.timerId);\n    window.clearInterval(this.timerTwo);\n  }\n\n  render() {\n    return (\n      <div className=\"App\">\n        <h1>React clock</h1>\n\n        {\n          this.state.hasClock && (\n            <div className=\"Clock\">\n              <strong className=\"Clock__name\">\n                {this.state.clockName}\n              </strong>\n\n              {' time is '}\n\n              <span className=\"Clock__time\">\n                {this.state.today.toUTCString().slice(-12, -4)}\n              </span>\n            </div>\n          )\n        }\n      </div>\n    );\n  }\n}\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}